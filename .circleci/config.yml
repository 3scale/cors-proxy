version: 2.1

jobs:
  release-runtime:
    machine: true
    environment:
      S2I_VERSION: "1.1.7-226afa1"
      DOCKER_REGISTRY: "quay.io"
    steps:
      - checkout
      - run: .circleci/install-s2i.sh ~/bin
      - run: make test BUILD_TYPE=runtime
      - deploy:
          name: Push runtime image
          command: |
            if [ -n "${CIRCLE_TAG}" ] || [ -n "${CIRCLE_BRANCH}" ]; then
              docker login -u="${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}" "${DOCKER_REGISTRY}"
              make push RELEASE=${CIRCLE_TAG:-${CIRCLE_BRANCH}}
            fi
  release-builder:
    machine: true
    environment:
      S2I_VERSION: "1.1.7-226afa1"
      DOCKER_REGISTRY: "quay.io"
    steps:
      - checkout
      - run: .circleci/install-s2i.sh ~/bin
      - run: make test BUILD_TYPE=builder
      - deploy:
          name: Push builder image
          command: |
            if [ -n "${CIRCLE_TAG}" ] || [ -n "${CIRCLE_BRANCH}" ]; then
              docker login -u="${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}" "${DOCKER_REGISTRY}"
              make push RELEASE=${CIRCLE_TAG:-${CIRCLE_BRANCH}}-builder
            fi
  test:
    docker:
      - image: quay.io/3scale/s2i-openresty-centos7:1.17.5.1-0-centos8
        environment:
          TEST_NGINX_BINARY: openresty
          LUA_BIN_PATH: /opt/app-root/bin
          DATABASE_URL: mysql://root@localhost:3306/circle_test
      - image: mysql:5.6
        environment:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_DATABASE: "circle_test"
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    working_directory: /opt/app-root/cors-proxy
    steps:
      - checkout
      - run: rm -rf lua_modules
      - restore_cache:
          keys:
            - cors-proxy-rocks-{{ arch }}-{{ checksum "Roverfile.lock" }}
            - cors-proxy-rocks-{{ arch }}-{{ .Branch }}
            - cors-proxy-rocks-{{ arch }}-master
      - run: make dependencies
      - save_cache:
          key: cors-proxy-rocks-{{ arch }}-{{ checksum "Roverfile.lock" }}
          paths:
            - lua_modules
      - restore_cache:
          keys:
            - cors-proxy-cpanm-{{ arch }}-{{ checksum "cpanfile" }}
            - cors-proxy-cpanm-{{ arch }}-{{ .Branch }}
            - cors-proxy-cpanm-{{ arch }}-master
      - run: /usr/libexec/s2i/entrypoint sh -c "rover exec busted"
      - run:
          command: /usr/libexec/s2i/entrypoint make prove
          environment:
            JUNIT_OUTPUT_FILE: tmp/junit/prove.xml
            HARNESS: TAP::Harness::JUnit
            TEST_NGINX_ERROR_LOG: tmp/prove.log
      - save_cache:
          key: cors-proxy-cpanm-{{ arch }}-{{ checksum "cpanfile" }}
          paths:
            - ~/perl5
      - store_test_results:
          path: tmp/junit
      - store_artifacts:
          path: tmp
          destination: tmp

workflows:
  build_and_test:
    jobs:
      - test:
          filters: # required since `release-*` has tag filters AND requires `test`
            tags:
              only: /.*/
      - release-builder:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - release-runtime:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/