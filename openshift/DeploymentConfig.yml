apiVersion: v1
kind: DeploymentConfig
metadata:
  name: cors-proxy
  labels:
    app: cors-proxy
spec:
  replicas: 1
  selector:
    app: cors-proxy
    deploymentconfig: cors-proxy
  strategy:
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 1800
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: cors-proxy
        deploymentconfig: cors-proxy
    spec:
      containers:
        - name: cors-proxy
          image: cors-proxy:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: system-database-url
                  key: password
          resources: {}
          livenessProbe: {}
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: Always
      restartPolicy: Always
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - cors-proxy
        from:
          kind: ImageStreamTag
          name: 'cors-proxy:latest'
