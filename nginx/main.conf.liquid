daemon {{ daemon }};
master_process {{ master_process }};
worker_processes {{ worker_processes }};

events {
  worker_connections 1024;
}

http {
  lua_code_cache {{ lua_code_cache }};

  lua_package_path "{{ lua_path }};;";
  lua_package_cpath "{{ lua_cpath }};;";

  init_by_lua_block {
    require('cors-proxy'):init()
  }

  init_worker_by_lua_block {
    -- code to be executed after forking workers
  }

  log_by_lua_block {
    -- custom logging
  }

  upstream upstream {
    server 0.0.0.1:1;

    balancer_by_lua_block { require('cors-proxy'):upstream() }

    keepalive 1024;
  }

  server {
    listen {{ port }} default_server;

    set_by_lua_block $proxy_scheme { return ngx.var.scheme }

    location / {
      access_by_lua_block {
        require('cors-proxy'):access()
      }

      rewrite_by_lua_block {
        require('cors-proxy'):rewrite()
      }

      proxy_http_version 1.1;
      proxy_pass $proxy_scheme://upstream;
      proxy_set_header Connection "";
      proxy_set_header Host "$host";
    }
  }
}
